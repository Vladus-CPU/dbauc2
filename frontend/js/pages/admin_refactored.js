// Refactored compact admin panel (clean build)
import { getMyProfile, listAuctions, createAuction, clearAuction, closeAuction, listParticipantsAdmin, approveParticipant, listAuctionOrdersAdmin, listAuctionDocuments, listAdminUsers, promoteUser, demoteUser, authorizedFetch, adminWalletSummary, adminWalletAction, adminWalletTransactions, seedRandomAuctionOrders, cleanupAuctionBots } from '../api.js';
import { showToast } from '../ui/toast.js';
import { initAccessControl } from '../ui/session.js';

const S = {
  currentUser: null,
  walletSelected: null,
  showBots: false,
};

const $ = sel => document.querySelector(sel);
function el(tag, props={}, ...children){ const e=document.createElement(tag); Object.assign(e, props); for(const c of children){ if(typeof c==='string') e.appendChild(document.createTextNode(c)); else if(c) e.appendChild(c);} return e; }
function fmtDT(v){ if(!v) return '‚Äî'; try{return new Date(v).toLocaleString('uk-UA',{dateStyle:'short',timeStyle:'short'});}catch{return String(v);} }
function tile(label,val,meta){ const t=el('div',{className:'metrics-tile'}, el('span',{className:'metrics-tile__value'},val??'‚Äî'), el('span',{className:'metrics-tile__label'},label)); if(meta) t.appendChild(el('span',{className:'metrics-tile__meta'},meta)); return t; }

function collapsible(section,id){ section.classList.add('admin-collapsible'); section.id=id; section.setAttribute('aria-expanded','true'); const btn=el('button',{className:'admin-collapsible__toggle',type:'button'},'–ó–≥–æ—Ä–Ω—É—Ç–∏'); btn.addEventListener('click',()=>{const exp=section.getAttribute('aria-expanded')==='true'; section.setAttribute('aria-expanded',exp?'false':'true'); btn.textContent=exp?'–†–æ–∑–≥–æ—Ä–Ω—É—Ç–∏':'–ó–≥–æ—Ä–Ω—É—Ç–∏';}); section.appendChild(btn); const body=el('div',{className:'admin-collapsible__body'}); [...section.children].filter(c=>!c.classList.contains('section-heading') && !c.classList.contains('admin-collapsible__toggle')).forEach(c=>body.appendChild(c)); section.appendChild(body); }

function auctionCard(a){ const card=el('article',{className:'stack-card compact'}); card.append(
  el('div',{className:'stack-card__header auction-mini-header'}, el('strong',{},`#${a.id} ${a.product}`), el('span',{className:'chip'},a.type), el('span',{className:'chip'},`k=${a.k_value}`), el('span',{className:`chip ${a.status==='collecting'?'chip--accent':''}`},a.status)),
  el('div',{className:'auction-mini-meta'}, el('span',{},fmtDT(a.window_start)), el('span',{},fmtDT(a.window_end)), el('span',{},fmtDT(a.created_at))),
  el('div',{className:'auction-mini-meta',style:'font-size:0.68rem;',id:`orders-info-${a.id}`},'‚Ä¶'),
  (()=>{ const actions=el('div',{className:'stack-card__actions'});
    const btnView=el('button',{className:'btn btn-ghost btn-compact',onclick:()=>loadParticipants(a.id,card)},'–£—á–∞—Å–Ω–∏–∫–∏');
    const btnDocs=el('button',{className:'btn btn-ghost btn-compact',onclick:()=>loadDocs(a.id,card)},'–î–æ–∫—É–º–µ–Ω—Ç–∏');
    if(a.status==='collecting') actions.append(el('button',{className:'btn btn-primary btn-compact',onclick:()=>doClear(a.id)},'–ö–ª—ñ—Ä–∏–Ω–≥'));
    if(a.status!=='closed') actions.append(el('button',{className:'btn btn-ghost btn-compact',onclick:()=>doClose(a.id)},'–ó–∞–∫—Ä–∏—Ç–∏'));
    actions.append(btnView,btnDocs); return actions; })()
); if(a.status==='collecting') card.append(seedForm(a.id)); refreshOrdersInfo(a.id); return card; }

async function refreshOrdersInfo(id){ const box=$(`#orders-info-${id}`); if(!box) return; try{ const orders=await listAuctionOrdersAdmin(id); const b=orders.filter(o=>o.side==='bid').length; const a=orders.filter(o=>o.side==='ask').length; const reserved=orders.reduce((s,o)=>s+(+o.reserved_amount||0),0); const cleared=orders.reduce((s,o)=>s+(+o.cleared_quantity||0),0); box.textContent=`${orders.length} –∑–∞—è–≤–æ–∫ ‚Ä¢ b${b}/a${a} ‚Ä¢ —Ä–µ–∑ ${reserved.toFixed(2)} ‚Ä¢ –∫–ª—ñ—Ä ${cleared.toFixed(2)}`; }catch{ box.textContent='–ü–æ–º–∏–ª–∫–∞ –∑–∞—è–≤–æ–∫'; } }

function seedForm(auctionId){ const f=el('form',{className:'inline-form auction-seed-form',style:'margin-top:10px;'}); f.innerHTML=`<fieldset style="display:flex;flex-wrap:wrap;gap:6px;align-items:flex-end;border:1px solid var(--surface-border-soft);padding:6px 8px;border-radius:8px;font-size:0.68rem;"> <legend style="font-size:0.55rem;letter-spacing:.1em;text-transform:uppercase;padding:0 4px;">–ë–æ—Ç–∏</legend> <label style="display:flex;flex-direction:column;gap:2px;"><span>K-—Å—Ç—å</span><input name="count" type="number" value="5" min="1" max="50" class="form__input" style="width:52px;"></label> <label style="display:flex;flex-direction:column;gap:2px;"><span>Bid/tr</span><input name="bidsPerTrader" type="number" value="1" min="0" max="10" class="form__input" style="width:52px;"></label> <label style="display:flex;flex-direction:column;gap:2px;"><span>Ask/tr</span><input name="asksPerTrader" type="number" value="1" min="0" max="10" class="form__input" style="width:52px;"></label> <label style="display:flex;flex-direction:column;gap:2px;"><span>–°–ø—Ä–µ–¥%</span><input name="priceSpread" type="number" value="5" step="0.1" min="0.1" max="50" class="form__input" style="width:58px;"></label> <label style="display:flex;flex-direction:column;gap:2px;"><span>QtyMin</span><input name="quantityMin" type="number" value="1" min="0" class="form__input" style="width:58px;"></label> <label style="display:flex;flex-direction:column;gap:2px;"><span>QtyMax</span><input name="quantityMax" type="number" value="10" min="0" class="form__input" style="width:58px;"></label> <label style="display:flex;flex-direction:column;gap:2px;"><span>–¶–µ–Ω—Ç—Ä</span><input name="priceCenter" type="number" step="0.0001" placeholder="auto" class="form__input" style="width:68px;"></label> <label style="display:flex;align-items:center;gap:4px;margin-top:14px;"><input name="allowCross" type="checkbox" value="1"><span>Cross</span></label> <button class="btn btn-primary btn-compact" style="margin-left:4px;">Go</button> <button type="button" data-role="refresh" class="btn btn-ghost btn-compact">‚Üª</button> <button type="button" data-role="cleanup" class="btn btn-ghost btn-compact">üóë</button> <span class="seed-status muted" style="margin-left:auto;"></span> </fieldset>`; const statusEl=f.querySelector('.seed-status'); f.addEventListener('submit',async ev=>{ev.preventDefault(); const fd=new FormData(f); const payload=Object.fromEntries([...fd.entries()].map(([k,v])=>[k,v===''?undefined:(isNaN(Number(v))?v:Number(v))])); payload.allowCross=!!fd.get('allowCross'); statusEl.textContent='‚Ä¶'; try{ await seedRandomAuctionOrders(auctionId,payload); statusEl.textContent='OK'; showToast('–ë–æ—Ç-–∑–∞—è–≤–∫–∏ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ','success'); setTimeout(()=>statusEl.textContent='',1600); await render(); }catch(e){ statusEl.textContent='X'; showToast(e?.message||'–ü–æ–º–∏–ª–∫–∞','error'); }}); f.querySelector('[data-role="refresh"]').addEventListener('click',async()=>{showToast('–û–Ω–æ–≤–ª–µ–Ω–Ω—è','info'); await render();}); f.querySelector('[data-role="cleanup"]').addEventListener('click',async()=>{ if(!confirm('–û—á–∏—Å—Ç–∏—Ç–∏ –±–æ—Ç—ñ–≤?'))return; statusEl.textContent='‚Ä¶'; try{ await cleanupAuctionBots(auctionId,{removeUsers:false}); statusEl.textContent='OK'; showToast('–û—á–∏—â–µ–Ω–æ','success'); setTimeout(()=>statusEl.textContent='',1600); await render(); }catch(e){ statusEl.textContent='X'; showToast(e?.message||'–ü–æ–º–∏–ª–∫–∞','error'); }}); return f; }

async function loadParticipants(auctionId, host){ let wrap=host.querySelector('.participants-wrap'); if(!wrap){ wrap=el('div',{className:'data-list participants-wrap'}); host.appendChild(wrap);} wrap.hidden=false; wrap.textContent='–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è‚Ä¶'; try{ const list=await listParticipantsAdmin(auctionId); if(!list.length){wrap.textContent='–ù–µ–º–∞—î —É—á–∞—Å–Ω–∏–∫—ñ–≤'; return;} wrap.innerHTML=''; list.forEach(p=>{ const line=el('div',{className:'data-list__item'}, el('span',{className:'data-list__label'},`#${p.id} —Ç—Ä ${p.trader_id}`), el('span',{className:'chip'},p.status)); if(p.status==='pending') line.appendChild(el('button',{className:'btn btn-primary btn-compact',onclick:async()=>{try{await approveParticipant(auctionId,p.id); showToast('–°—Ö–≤–∞–ª–µ–Ω–æ','success'); await loadParticipants(auctionId,host);}catch(e){showToast(e?.message||'–ü–æ–º–∏–ª–∫–∞','error');}}},'OK')); wrap.appendChild(line); }); }catch{ wrap.textContent='–ü–æ–º–∏–ª–∫–∞'; } }
async function loadDocs(auctionId, host){ let wrap=host.querySelector('.docs-wrap'); if(!wrap){ wrap=el('div',{className:'data-list docs-wrap'}); host.appendChild(wrap);} wrap.hidden=false; wrap.textContent='–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è‚Ä¶'; try{ const files=await listAuctionDocuments(auctionId); if(!files.length){wrap.textContent='–ù–µ–º–∞—î –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤';return;} wrap.innerHTML=''; files.forEach(f=>{ const line=el('div',{className:'data-list__item'}, el('span',{className:'data-list__label'},f), el('button',{className:'btn btn-ghost btn-compact',onclick:()=>downloadDoc(auctionId,f)},'‚Üì')); wrap.appendChild(line); }); }catch{ wrap.textContent='–ü–æ–º–∏–ª–∫–∞'; } }
async function downloadDoc(auctionId,fname){ try{ const res=await authorizedFetch(`${location.origin.replace(/\/$/,'')}/api/admin/auctions/${auctionId}/documents/${encodeURIComponent(fname)}`); if(!res.ok) throw new Error('HTTP '+res.status); const blob=await res.blob(); const url=URL.createObjectURL(blob); const a=document.createElement('a'); a.href=url; a.download=fname; document.body.appendChild(a); a.click(); a.remove(); URL.revokeObjectURL(url); showToast('–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ','success'); }catch(e){ showToast(e?.message||'–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏','error'); } }
async function doClear(id){ if(!confirm('–ö–ª—ñ—Ä–∏–Ω–≥ –∑–∞—Ä–∞–∑?')) return; const res=await clearAuction(id); showToast(`Cleared ${res.price??'‚Äî'}`,'success'); await render(); }
async function doClose(id){ if(!confirm('–ó–∞–∫—Ä–∏—Ç–∏ –∞—É–∫—Ü—ñ–æ–Ω?')) return; await closeAuction(id); showToast('–ó–∞–∫—Ä–∏—Ç–æ','success'); await render(); }

function updateActiveNav(){ const links=document.querySelectorAll('.admin-nav-link'); let active=null; [...document.querySelectorAll('.admin-content > section')].forEach(sec=>{const r=sec.getBoundingClientRect(); if(r.top<window.innerHeight*0.4 && r.bottom>120) active=sec.id;}); links.forEach(l=>l.classList.toggle('is-active', l.getAttribute('href')==='#'+active)); }

async function render(){ const root=document.getElementById('admin-content-root'); if(!root) return; root.innerHTML='';
  let users=[], auctions=[], walletOverview={users:[],totals:{available:0,reserved:0,total:0}}; try{[users,auctions,walletOverview]=await Promise.all([listAdminUsers().catch(()=>[]), listAuctions().catch(()=>[]), adminWalletSummary().catch(()=>({users:[],totals:{available:0,reserved:0,total:0}}))]);}catch{}
  const adminCount=users.filter(u=>u.is_admin).length, traderCount=users.length-adminCount; const collecting=auctions.filter(a=>a.status==='collecting'); const cleared=auctions.filter(a=>a.status==='cleared'); const closed=auctions.filter(a=>a.status==='closed'); const upcoming=auctions.map(a=>a.window_start?new Date(a.window_start):null).filter(d=>d && d>new Date()).sort((a,b)=>a-b)[0]||null;
  // Overview
  const overview=el('section',{className:'dashboard-card'}); overview.append(el('div',{className:'section-heading'}, el('span',{className:'eyebrow'},'–¶–µ–Ω—Ç—Ä –∫–µ—Ä—É–≤–∞–Ω–Ω—è'), el('h2',{className:'section-heading__title'},'–û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∏–π –∑–Ω—ñ–º–æ–∫')),(()=>{const g=el('div',{className:'metrics-grid'}); g.append(tile('–ê—É–∫—Ü—ñ–æ–Ω—ñ–≤',String(auctions.length)), tile('–ó–±—ñ—Ä',String(collecting.length)), tile('–ö–ª—ñ—Ä–∏–Ω–≥',String(cleared.length)), tile('–ó–∞–∫—Ä–∏—Ç–æ',String(closed.length)), tile('–ê–¥–º—ñ–Ω–∏',String(adminCount), traderCount?`${traderCount} —Ç—Ä–µ–π–¥–µ—Ä—ñ–≤`:'‚Äî'), tile('–ù–∞–π–±–ª–∏–∂—á–µ', upcoming?fmtDT(upcoming):'‚Äî')); return g;})()); collapsible(overview,'overview'); root.appendChild(overview);
  // Wallet
  const wallet=el('section',{className:'dashboard-card'}); wallet.append(el('div',{className:'section-heading'}, el('span',{className:'eyebrow'},'–ì–∞–º–∞–Ω—Ü—ñ'), el('h2',{className:'section-heading__title'},'–ë–∞–ª–∞–Ω—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤')),(()=>{const g=el('div',{className:'metrics-grid'}); const t=walletOverview.totals; g.append(tile('–î–æ—Å—Ç—É–ø–Ω–æ',t.available.toFixed(2)), tile('–†–µ–∑–µ—Ä–≤',t.reserved.toFixed(2)), tile('–†–∞–∑–æ–º',t.total.toFixed(2))); return g;})()); const walletUsers=el('div',{className:'data-list wallet-users-list scroll-panel'}); if(!walletOverview.users.length) walletUsers.textContent='–ù–µ–º–∞—î –≥–∞–º–∞–Ω—Ü—ñ–≤'; else walletOverview.users.forEach(u=>{const avail=+u.available||0,res=+u.reserved||0; walletUsers.appendChild(el('div',{className:'data-list__item'}, el('span',{className:'data-list__label'},`#${u.id} ${u.username}`), el('span',{className:'chip'},`–î–æ—Å—Ç ${avail.toFixed(2)}`), el('span',{className:'chip'},`–†–µ–∑ ${res.toFixed(2)}`), el('span',{className:'data-list__meta'},(avail+res).toFixed(2)))); }); wallet.append(walletUsers); const usrSel=el('select',{className:'field'}, el('option',{value:''},'–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á')); walletOverview.users.forEach(u=>usrSel.appendChild(el('option',{value:String(u.id)},`#${u.id} ${u.username}`))); if(walletOverview.users.length){ if(!walletOverview.users.some(u=>u.id===S.walletSelected)) S.walletSelected=walletOverview.users[0].id; usrSel.value=S.walletSelected?String(S.walletSelected):''; }
  const actionForm=el('form',{className:'inline-form wallet-action-form'}, el('select',{className:'field',name:'action'}, el('option',{value:'deposit'},'–ü–æ–ø–æ–≤–Ω–∏—Ç–∏'), el('option',{value:'withdraw'},'–°–ø–∏—Å–∞—Ç–∏'), el('option',{value:'reserve'},'–†–µ–∑–µ—Ä–≤'), el('option',{value:'release'},'–†–æ–∑–º–æ—Ä–æ–∑–∏—Ç–∏'), el('option',{value:'spend'},'–°–ø–∏—Å–∞—Ç–∏ —Ä–µ–∑–µ—Ä–≤')), el('input',{className:'field',name:'amount',type:'number',step:'0.01',min:'0',placeholder:'–°—É–º–∞',required:true}), el('input',{className:'field',name:'note',placeholder:'–ù–æ—Ç–∞—Ç–∫–∞'}), el('button',{className:'btn btn-primary btn-compact',type:'submit'},'OK'));
  const controls=el('div',{className:'wallet-controls'}, el('label',{className:'form-field',style:'flex:1;'}, el('span',{className:'form-field__label'},'–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á'), usrSel), actionForm); wallet.append(controls); const txList=el('div',{className:'data-list wallet-transactions scroll-panel'}); wallet.append(txList); async function loadTx(id){ if(!id){txList.textContent='–û–±–µ—Ä—ñ—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞';return;} txList.textContent='...'; try{const txs=await adminWalletTransactions(id,50); if(!txs.length){txList.textContent='–ü–æ—Ä–æ–∂–Ω—å–æ';return;} txList.innerHTML=''; txs.forEach(tx=>txList.appendChild(el('div',{className:'data-list__item'}, el('span',{className:'data-list__label'},`#${tx.id} ${tx.type}`), el('span',{className:'chip'},(+tx.amount||0).toFixed(2)), el('span',{className:'data-list__meta'}, fmtDT(tx.createdAt)))));}catch{txList.textContent='–ü–æ–º–∏–ª–∫–∞';} } if(S.walletSelected) loadTx(S.walletSelected); usrSel.addEventListener('change',()=>{S.walletSelected=usrSel.value?Number(usrSel.value):null; loadTx(S.walletSelected);}); actionForm.addEventListener('submit',async e=>{e.preventDefault(); const fd=new FormData(actionForm); const action=String(fd.get('action')); const amountRaw=String(fd.get('amount')||'').trim(); const note=String(fd.get('note')||'').trim()||undefined; const num=Number(amountRaw); if(!(num>0)){showToast('–°—É–º–∞ > 0','error');return;} if(!S.walletSelected){showToast('–û–±–µ—Ä—ñ—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞','error');return;} try{ await adminWalletAction(S.walletSelected,{action,amount:amountRaw,note}); showToast('–ì–æ—Ç–æ–≤–æ','success'); await render(); }catch(err){ showToast(err?.message||'–ü–æ–º–∏–ª–∫–∞','error'); }});
  collapsible(wallet,'wallet'); root.appendChild(wallet);
  // Quick actions
  const quick=el('section',{className:'dashboard-card'}); quick.append(el('div',{className:'section-heading'}, el('span',{className:'eyebrow'},'–ù–∞–≤—ñ–≥–∞—Ü—ñ—è'), el('h2',{className:'section-heading__title'},'–®–≤–∏–¥–∫—ñ –¥—ñ—ó')),( ()=>{const list=el('div',{className:'quick-actions-grid'}); [{label:'–Ü–Ω–≤–µ–Ω—Ç–∞—Ä',href:'listing.html',variant:'primary',description:'–ö–µ—Ä—É–≤–∞–Ω–Ω—è –ª–æ—Ç–∞–º–∏'},{label:'–ê—É–∫—Ü—ñ–æ–Ω–∏',href:'auctions.html',variant:'ghost',description:'–ü—É–±–ª—ñ—á–Ω—ñ'},{label:'–ê–∫–∞—É–Ω—Ç',href:'account.html',variant:'ghost',description:'–ü—Ä–æ—Ñ—ñ–ª—å'}].forEach(a=>list.appendChild(el('a',{className:`quick-action quick-action--${a.variant}`,href:a.href}, el('span',{className:'quick-action__label'},a.label), el('span',{className:'quick-action__meta'},a.description)))); return list;})()); collapsible(quick,'actions'); root.appendChild(quick);
  // Create auction
  const create=el('section',{className:'dashboard-card'}); create.append(el('div',{className:'section-heading'}, el('span',{className:'eyebrow'},'–ù–æ–≤–∏–π –∞—É–∫—Ü—ñ–æ–Ω'), el('h2',{className:'section-heading__title'},'–ó–∞–ø—É—Å–∫'))); const form=el('form',{className:'form-grid form-grid--compact'}, el('label',{className:'form-field'}, el('span',{className:'form-field__label'},'–ü—Ä–æ–¥—É–∫—Ç'), el('input',{className:'form__input',name:'product',required:true,placeholder:'–ü—à–µ–Ω–∏—Ü—è 100—Ç'})), el('label',{className:'form-field'}, el('span',{className:'form-field__label'},'–¢–∏–ø'), el('select',{className:'form__input',name:'type'}, el('option',{value:'open'},'open'), el('option',{value:'closed'},'closed'))), el('label',{className:'form-field'}, el('span',{className:'form-field__label'},'k'), el('input',{className:'form__input',name:'k',type:'number',min:'0',max:'1',step:'0.01',value:'0.5'})), el('label',{className:'form-field'}, el('span',{className:'form-field__label'},'–ü–æ—á–∞—Ç–æ–∫'), el('input',{className:'form__input',name:'ws',type:'datetime-local'})), el('label',{className:'form-field'}, el('span',{className:'form-field__label'},'–ö—ñ–Ω–µ—Ü—å'), el('input',{className:'form__input',name:'we',type:'datetime-local'})), el('div',{className:'form-actions'}, el('button',{className:'btn btn-primary',type:'submit'},'–°—Ç–≤–æ—Ä–∏—Ç–∏')) ); form.addEventListener('submit',async e=>{e.preventDefault(); const fd=new FormData(form); const product=String(fd.get('product')||'').trim(); const type=String(fd.get('type')||'open'); const k=Number(fd.get('k')); const ws=String(fd.get('ws')||'').trim()||undefined; const we=String(fd.get('we')||'').trim()||undefined; if(!product||Number.isNaN(k)){showToast('–í–∫–∞–∂—ñ—Ç—å –ø—Ä–æ–¥—É–∫—Ç —Ç–∞ k','error');return;} try{ await createAuction({product,type,k,windowStart:ws,windowEnd:we}); showToast('–ê—É–∫—Ü—ñ–æ–Ω —Å—Ç–≤–æ—Ä–µ–Ω–æ','success'); form.reset(); await render(); }catch(err){ showToast(err?.message||'–ü–æ–º–∏–ª–∫–∞','error'); }}); create.append(form); collapsible(create,'create'); root.appendChild(create);
  // Team
  const team=el('section',{className:'dashboard-card'}); team.append(el('div',{className:'section-heading'}, el('span',{className:'eyebrow'},'–ö–æ–º–∞–Ω–¥–∞'), el('h2',{className:'section-heading__title'},'–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∏ —Ç–∞ —Ç—Ä–µ–π–¥–µ—Ä–∏'))); const toggles=el('div',{style:'display:flex;gap:8px;margin-bottom:8px;'}, el('button',{className:'btn btn-ghost btn-compact',onclick:()=>{S.showBots=!S.showBots; render();}}, S.showBots?'–ü—Ä–∏—Ö–æ–≤–∞—Ç–∏ –±–æ—Ç—ñ–≤':'–ü–æ–∫–∞–∑–∞—Ç–∏ –±–æ—Ç—ñ–≤'), el('button',{className:'btn btn-danger btn-compact',onclick:async()=>{ if(!confirm('–í–∏–¥–∞–ª–∏—Ç–∏ –í–°–Ü–• –±–æ—Ç—ñ–≤?')) return; try{ const { purgeAllBots }=await import('../api/auctions.js'); const res=await purgeAllBots({usernamePrefix:'bot_'}); showToast(`–ë–æ—Ç—ñ–≤ –≤–∏–¥–∞–ª–µ–Ω–æ: ${res.removedUsers||0}`,'success'); await render(); }catch(e){ showToast(e?.message||'–ü–æ–º–∏–ª–∫–∞','error'); }}},'–ü—É—Ä–≥ –±–æ—Ç—ñ–≤')); const filtered=S.showBots?users:users.filter(u=>!(u.username||'').startsWith('bot_')); const userList=el('div',{className:'data-list team-list scroll-panel'}); if(!filtered.length) userList.textContent=S.showBots?'–ü–æ—Ä–æ–∂–Ω—å–æ':'–ù–µ–º–∞—î (–±–æ—Ç–∏ –ø—Ä–∏—Ö–æ–≤–∞–Ω—ñ)'; else filtered.forEach(u=>{const isSelf=S.currentUser&&+S.currentUser.id===+u.id; const box=el('div',{className:'data-list__item'}, el('span',{className:'data-list__label'},`#${u.id} ${u.username}${isSelf?' (–≤–∏)':''}`), u.is_admin?el('span',{className:'chip chip--accent'},'–ê–¥–º—ñ–Ω'):el('span',{className:'chip'},'–¢—Ä–µ–π–¥–µ—Ä')); const act=el('div',{}); if(!u.is_admin) act.appendChild(el('button',{className:'btn btn-primary btn-compact',onclick:async()=>{ if(!confirm(`–ü—ñ–¥–≤–∏—â–∏—Ç–∏ ${u.username}?`))return; try{await promoteUser(u.id); showToast('–ü—ñ–¥–≤–∏—â–µ–Ω–æ','success'); await render();}catch(e){showToast(e?.message||'–ü–æ–º–∏–ª–∫–∞','error');}}},'‚Üë')); else if(!isSelf) act.appendChild(el('button',{className:'btn btn-ghost btn-compact',onclick:async()=>{ if(!confirm(`–ó–Ω—è—Ç–∏ –ø—Ä–∞–≤–∞ –∑ ${u.username}?`))return; try{await demoteUser(u.id); showToast('–ì–æ—Ç–æ–≤–æ','success'); await render();}catch(e){showToast(e?.message||'–ü–æ–º–∏–ª–∫–∞','error');}}},'‚Üì')); else act.appendChild(el('span',{className:'chip'},'–í–∏')); box.appendChild(act); userList.appendChild(box); }); team.append(toggles,userList); collapsible(team,'team'); root.appendChild(team);
  // Auctions
  const auctionsSec=el('section',{className:'dashboard-card'}); auctionsSec.append(el('div',{className:'section-heading'}, el('span',{className:'eyebrow'},'–ê—É–∫—Ü—ñ–æ–Ω–∏'), el('h2',{className:'section-heading__title'},'–ö–µ—Ä—É–≤–∞–Ω–Ω—è –≤—ñ–∫–Ω–∞–º–∏'))); const aWrap=el('div',{className:'stack-grid stack-grid--dense scroll-panel'}); if(!auctions.length) aWrap.textContent='–©–µ –Ω–µ–º–∞—î –∞—É–∫—Ü—ñ–æ–Ω—ñ–≤'; else auctions.forEach(a=>aWrap.appendChild(auctionCard(a))); auctionsSec.append(aWrap); collapsible(auctionsSec,'auctions'); root.appendChild(auctionsSec);
  updateActiveNav();
}

document.addEventListener('DOMContentLoaded', async ()=>{ const session=await initAccessControl({requireAdmin:true,redirectTo:'account.html',onDenied:()=>showToast('–ü–æ—Ç—Ä—ñ–±–µ–Ω –¥–æ—Å—Ç—É–ø –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞','error')}); if(!session?.user) return; S.currentUser=session.user; try{ const profileInfo=await getMyProfile().catch(()=>null); const box=document.getElementById('admin-profile-summary'); if(box){ box.innerHTML=''; const strong=document.createElement('strong'); strong.textContent=session.user.username; box.append('–£–≤—ñ–π—à–ª–∏ —è–∫ ',strong); if(profileInfo?.profile){ const full=[profileInfo.profile.first_name,profileInfo.profile.last_name].filter(Boolean).join(' '); if(full){ const span=document.createElement('span'); span.className='muted'; span.style.marginLeft='8px'; span.textContent=full; box.appendChild(span);} } const link=document.createElement('a'); link.href='profile.html'; link.className='btn'; link.style.marginLeft='8px'; link.textContent='–ü—Ä–æ—Ñ—ñ–ª—å'; box.appendChild(link);} }catch{} await render(); document.addEventListener('scroll',()=>requestAnimationFrame(updateActiveNav),{passive:true}); });
